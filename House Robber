class Solution {
    public int rob(int[] nums) {
         if (nums == null || nums.length == 0) {
            return 0;
        }

        
        if (nums.length == 1) {
            return nums[0];
        }

        
       int[] maxAA=new int[nums.length];
       maxAA[0]=nums[0];
       maxAA[1]=Math.max(nums[0],nums[1]);
       for(int i=2;i<nums.length;i++)
       {
        maxAA[i]=Math.max(maxAA[i-1],nums[i]+maxAA[i-2]);

       }
       return maxAA[nums.length-1];
    }
}

Example 1:

Input: nums = [1,2,3,1]
Output: 4
Explanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).
Total amount you can rob = 1 + 3 = 4.
Example 2:

Input: nums = [2,7,9,3,1]
Output: 12
Explanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).
Total amount you can rob = 2 + 9 + 1 = 12.
